<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ProFileDownloader</name>
    </assembly>
    <members>
        <member name="T:ProFileDownloader.FileTransferer.Downloader">
            <summary>
            A class which represents a file downloader
            </summary>
        </member>
        <member name="P:ProFileDownloader.FileTransferer.Downloader.SuggestedFileName">
            <summary>
            Giving a name to overwrite the remote suggested file name.
            </summary>
        </member>
        <member name="M:ProFileDownloader.FileTransferer.Downloader.#ctor(System.String,System.String)">
            <summary>
            Initialize the downloader.
            </summary>
            <param name="Url">Url of the remote file.</param>
            <param name="DirectoryPath">Where the local file should be saved at.</param>
        </member>
        <member name="P:ProFileDownloader.FileTransferer.Downloader.SizeInReadableFormat">
            <summary>
            Giving you a readable format for the remote file size.
            </summary>
        </member>
        <member name="M:ProFileDownloader.FileTransferer.Downloader.LoadRemoteFilePropertiesAsync">
            <summary>
            Loads the downloader with the required information about the remote file.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ProFileDownloader.FileTransferer.Downloader.IsRemoteServerSupportFileSegmentaion">
            <summary>
            Indicates if the remote server supports the file segmentation or not
            </summary>
        </member>
        <member name="P:ProFileDownloader.FileTransferer.Downloader.IsRemoteServerSupportResuming">
            <summary>
            Indicates if the remote server supports the file resuming or not
            </summary>
        </member>
        <member name="M:ProFileDownloader.FileTransferer.Downloader.UpdateRemoteFilePropertiesForResuming">
            <summary>
            Updates the downloader with the new changes that happened to the remote file, to match the least changes to be able to resume downloading the file.
            </summary>
            <returns>
            Updates the remote file properties.
            </returns>
        </member>
        <member name="M:ProFileDownloader.FileTransferer.Downloader.DownloadFileAsync(System.Action{System.Single},System.Threading.CancellationToken)">
            <summary>
            Download the remote file.
            </summary>
            <param name="CurrentProgress">Gets the current downloading process</param>
            <param name="cancellationToken">A token to cancel the downloading process if you want.</param>
            <returns></returns>
        </member>
        <member name="T:ProFileDownloader.FileTransferer.FileSegmentaionDownloader">
            <summary>
            A class which represents segments downloader
            </summary>
        </member>
        <member name="M:ProFileDownloader.FileTransferer.FileSegmentaionDownloader.#ctor(System.String,System.String)">
            <summary>
            Initialize the segment downloader.
            </summary>
            <param name="Url">Url of the remote file.</param>
            <param name="DirectoryPath">Where the local file should be saved at.</param>
        </member>
        <member name="M:ProFileDownloader.FileTransferer.FileSegmentaionDownloader.LoadFileSegmentsAsync">
            <summary>
            Load the segments of the remote file.
            </summary>
            <returns>List of segments are stored</returns>
        </member>
        <member name="M:ProFileDownloader.FileTransferer.FileSegmentaionDownloader.GetBasicSegmentsInfo">
            <summary>
            Gets the segments basic data, to be stored on your own, for later resuming needs.
            </summary>
            <returns>Json Content, which is need to be stored in somewhere on your own.</returns>
        </member>
        <member name="M:ProFileDownloader.FileTransferer.FileSegmentaionDownloader.LoadFileSegmentsForResumingAsync(System.String)">
            <summary>
            Load the Segments data from the JsonContent
            </summary>
            <param name="JsonContent">Json Content, which you got from the <see cref="M:ProFileDownloader.FileTransferer.FileSegmentaionDownloader.GetBasicSegmentsInfo"/>  </param>
            <returns>reloaded segments to be able to resumed</returns>
        </member>
        <member name="M:ProFileDownloader.FileTransferer.FileSegmentaionDownloader.DownloadFileSegmensAsync(System.Action{System.Single},System.Threading.CancellationToken)">
            <summary>
            Start downloading the segments
            </summary>
            <param name="CurrentProgress">Gets the current downloading process</param>
            <param name="cancellationToken">A token to cancel the downloading process if you want.</param>
            <returns></returns>
        </member>
        <member name="M:ProFileDownloader.FileTransferer.FileSegmentaionDownloader.ReconstructSegmentsAsync">
            <summary>
            Reconstract the segments from the temp files that got created.
            </summary>
            <returns>A complete file in the directory that you specified in the constructor.</returns>
        </member>
        <member name="T:ProFileDownloader.NetworkFile.FileUtilities">
            <summary>
            Provides Utility Methods for dealing with files.
            </summary>
        </member>
    </members>
</doc>
